# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Github Actions Test

on:
  push:
    branches: 
      - release/**
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk
    - name: MongoDB in GitHub Actions
      # You may pin to the exact commit or the version.
      # uses: supercharge/mongodb-github-action@310bd1bbeb878d9de3e54ee492cbd9643b1e8875
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: "latest"
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: "**/node_modules"
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: Build with Maven
      run: mvn package --file pom.xml
    
      # Thanks to https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        cat >>~/.ssh/config <<END
        Host staging
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/staging.key
          StrictHostKeyChecking no
        END
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.KEY }}
        SSH_HOST: ${{ secrets.HOST }}
    
    # Thanks https://askubuntu.com/questions/100186/how-to-kill-only-if-process-is-running
    - name: Stop server.
      run: ssh staging "if pgrep java; then pkill -9 java; fi; sleep 5"
        
    - name: Copy single file to remote
      uses: garygrossgarten/github-action-scp@release
      with:
        local: target/CS4800-Project-0.0.1-SNAPSHOT.jar
        remote: CS4800-Project-0.0.1-SNAPSHOT.jar
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.KEY }}

    - name: Start server.
      run: ssh staging "nohup java -jar CS4800-Project-0.0.1-SNAPSHOT.jar > CS4800.log &"
